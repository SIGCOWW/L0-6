= 俺が好きなのは非接触決済だけどQRコード決済じゃない
@<author>{新卒のぺーぺー, lrks;twitter:__lrks__}
//profile{
最近はJojaコーポレーションを退職後、農作業に励んでいます。
なお求人については引き続き、株式会社イーグルジャンプ、株式会社スルガシステム、ブランクソフトウェアからのご案内をお待ちしております。
併せて奈良素敵大学、きらら女子大学からの公募についてもご案内いただきたいです。
よろしくお願いいたします。
//}


//lead{
この物語は、各種決済を導入したサークルのいきさつを淡々と述べるものです。過度な期待はしないでください。
あと、今回紹介するつもりだった「イシダ製電子棚札の通信プロトコル解析」からは離れて、次回にご期待しやがってください。
//}

== はじめに
締め切りが厳しいです。
博士課程の学生で同人誌を書いている人、社会人で同人誌を書いている人、朝起きられる人、みんな人間辞めているのでは？

さて、人間辞めている限界サークルといえば当サークルSIGCOWWですが、この度のC95からPayPayと交通系電子マネー決済を導入しました@<emoji>{congratulations}。
これにより、支払い手段として日本円のほか、「クレジットカード」「交通系電子マネー」「QRコード」による決済に対応したことになります。
今回の記事は、これらの支払い手段を導入するにあたっての記録をまとめたものです。

契約している会社を含めてまとめると、@<table>{paymethod}のとおりになりました。
これらはすべて加盟店@<fn>{pxvpay}として登録しています。
//footnote[pxvpay][pixiv PAYの場合、「加盟店」に当たるか微妙ですが見逃してください。]
//tabooular[paymethod][決済方法の一覧]{
決済方法         | 決済代行会社・サービス提供会社
=================|================================
クレジットカード | Square株式会社
クレジットカード | コイニー株式会社
交通系電子マネー | コイニー株式会社
WeChat Pay       | コイニー株式会社
pixiv PAY        | ピクシブ株式会社
PayPay           | PayPay株式会社
//}

本当は、QUICPayやiD、NFC決済（Visa payWave、Mastercard Contactless、JCB Contactless）あたりも導入できていると嬉しかったのですが、「交通系電子マネー」がある時点で上出来でしょう。もう100点満点中99点くらい取れています。
なお、この交通系電子マネーの導入は非常に大変で…という話は次の章で述べるので、ご期待しやがってください。
ちなみに、その次の章はコミケなどの即売会におけるオペレーションについて述べ、最後に今後の展望について述べています。


== 導入までのあれこれ
苦労話パートです。

=== クレジットカード編
「コミケでクレカ決済」といえば？Squareですよ！Square！
ということで、SIGCOWWではSquare株式会社@<fn>{square}が提供するクレジットカード決済を導入しています@<fn>{emoney}。
株式会社Squareによる審査を受ければVisa、Mastercard、AMEXの取り扱いが可能となり、株式会社ジェーシービーによる2次審査の結果次第でJCB、Diners、Discoverの取り扱いが可能です。
//footnote[square][米Square社の日本法人。三井住友カード株式会社と提携している。]
//footnote[emoney][コイニー株式会社の話は交通系電子マネー編でやります。]

個人の感想ですが、Squareに対しては次に示す印象を持ちました。

==== 導入が簡単
Webフォームから加盟店審査を申し込んで終わりです。
他社の場合ですが、「電話かメールで問い合わせてね！（完）」の一文があるだけなことも少なくありません。

==== 加盟店審査が寛大
運が良かっただけかも知れませんが、加盟店審査について比較的容易な印象を受け、苦労は感じませんでした@<fn>{kurou}。
//footnote[kurou][この章は「苦労話パート」なはずだが？]

==== 決済端末が簡素すぎる
日本以外の国ではNFC決済に対応した端末（@<img>{contactless_reader}）をはじめ本格的な決済端末が提供されている一方、日本法人からは簡素な端末（@<img>{chip_card_reader}）しか提供されていません。
スマートフォンやタブレットとの接続について、@<img>{chip_card_reader}は有線（フォーンプラグ）に対し@<img>{contactless_reader}は無線（Bluetooth）となり、電波干渉が心配されるコミケでの利用には配慮が要りそうですが、そもそも選択肢が無いというのは悲しいですね…。
//subfig[Squareが提供する端末]{
//image[contactless_reader][Square Contactless and Chip Reader][scale=0.49]
//image[chip_card_reader][Square Chip Card Reader][scale=0.49]
//}

なお、@<img>{contactless_reader}の端末を輸入して日本国内で利用することも検討しましたが、厳しそうです。
まず、当該端末はスマートフォンやタブレットとBluetoothで接続するのですが、技適マークがありません。
それを見なかったことにしても、日本法人が提供している決済アプリからは当該端末に対応していません。
他国の法人が提供する決済アプリを使うには、その国で有効なアカウントが必要で、そのアカウントは当該国での決済のみ利用できます。
「Square Reader SDK」という決済端末を扱うためのSDKもありますが、日本国内のアカウントでは利用できません。はい論破。

==== サイン必須なのが厄介
Squareによる決済では、どんなに少額でも決済時にサインが必要です。
サインレスどころか、PINコードによる決済もできません@<fn>{pin}。
ちなみに、米国とカナダのアカウントでは$25未満の決済はサインレスで行えます。ぐぬぬ…。
//footnote[pin][国外のアカウントでも同様。Squareの端末にはキーパッドがないため、PINコードはスマートフォンやタブレットの画面に入力させるしかないが、これがPCI (Payment Card Industry)基準を満たせない可能性がある。]


=== QRコード決済編
交通系電子マネー編だと思った？残念！QRコード決済編でした！

「コミケでQRコード決済」といえば？pixiv PAYですよ！pixiv PAY！
ということで、SIGCOWWではpixiv PAYを導入しています。
ただ、pixivのアカウントさえあれば良いので、@<bou>{導入では}苦労話はありません。
その分オペレーションで苦労しつつありますが、この辺の話は後ほど述べます。

次に、WeChat Pay@<fn>{wechatpay}の話です。
積極的に導入しようと思ったわけではなく、コイニー株式会社による決済を導入すると自動的に審査が進み、それに通っただけのことです。特に苦労話はありません。
なお、加盟店として登録されているがゆえに、中国国内で本人確認の済んだアカウントでなければ決済できません。
果たして、利用されることはあるのでしょうか。
//footnote[wechatpay][中国・テンセントが提供するチャットアプリの一機能として提供される支払方法。]

そして、PayPayの話です。
先の2つとは異なり、まともに加盟店審査を受け、導入しました。
導入の理由は半ば消去法ですが、数あるQRコード決済の中でシェアを獲得しそうな割に加盟店審査が甘そうだと考えたからです。
実際導入したところ、次のような印象を持ちました。

==== 加盟店審査の難易度は普通
甘いと思ったら普通でした。
個人で申込可能かつ催事利用可能という話だったため、厳しいわけではありませんでしたが、電話とメールによるやりとりは何度かありました。
業態確認と、「出展の様子を示せ」と言われる例のやつです。

==== サポートが厚い
何かにつけて連絡が来る、すぐ会おうとしてきます。

==== 加盟店登録しなくても良かったかも
PayPayで支払う際の方法には、@<img>{yomitoru}の「よみとる決済」と@<img>{miseru}「みせる決済」という2つがあります。
それぞれ、ユーザが店舗側に置かれたQRコードを@<bou>{読み取る}方法、ユーザが店舗側のPOSレジにQRコードを@<bou>{見せる}という方法です。
おそらく、個人や中小企業が運営する店舗の場合は「よみとる決済」、ファミリーマートやヤマダ電機などのチェーン店は「みせる決済」を想定していることでしょう。
もちろんSIGCOWWでは、「よみとる決済」でのみ支払いを受け付けています@<fn>{honto}。
//subfig[PayPayの支払い方法（公式サイトより引用）]{
//image[yomitoru][よみとる決済][scale=0.49]
//image[miseru][みせる決済][scale=0.49]
//}
//footnote[honto][本当は「みせる決済」で導入したかった…。]

ただ、PayPayには個人間送金の機能があり、これを利用すれば加盟店登録までする必要はなかったのでは…と考えています。
@<table>{paypay}は、加盟店として決済を受け付けた場合と個人間送金機能を利用した場合の比較で、この差をどう考えるかですね。
毎月数万円以上の決済が行われる店舗であれば、決済金額をPayPay残高で受け取っても仕方ないため加盟店登録！これしかないという感じですが…。
//tabooular[paypay][加盟店と個人間送金の比較]{
           | 加盟店                 & 個人間送金
==========>|========================&============
加盟店審査 | 必要                   & 不要
手数料   \ | しばらく無料           & 無料 \
           | （よみとる決済の場合） &
支払側還元 | あり（通常0.5%）       & なし
支払元     | PayPay残高             & PayPay残高
           | Yahoo!マネー           & （特典付与分は除く）
           | クレジットカード       &
振込先     | 銀行口座               & PayPay残高
//}


=== 交通系電子マネー編
いよいよ交通系電子マネー編です。
ようやく苦労話ができます。

ここで述べる交通系電子マネーとは、全国相互利用可能な交通系ICカードのうちPiTaPaを除く9種類、Kitaca、Suica、PASMO、TOICA、manaca、ICOCA、SUGOCA、nimoca、はやかけんのことです。
クレジットカードのようにサインやPINコード入力は不要でスムーズに決済可能なため、コミケ向きです。
しかし、加盟店審査は厳しめで、特に「個人名義での申込み」や「常設店舗なし」「催事利用」ではそれが顕著な印象を受けました。
個人サークルによるコミケでの利用を考えると、役満で絶望的です。
利用側からみれば、あんな駅の券売機でも入手できるカードで、スマートフォンにアプリを入れるだけで使えるような支払い手段なんですけど…。

SIGCOWWでは、最終的にコイニー株式会社@<fn>{coiney}が提供する決済サービスを利用することで、交通系電子マネーの取り扱いに対応しました。
ただ、ここにたどり着くまでには紆余曲折を経ており、まとめると@<table>{suica}のようになります。
//tabooular[suica][交通系電子マネー取り扱いのために申し込んだ記録]{
申し込み時期 | 社名・サービス名 | 結果
============>|==================|<==============
2017年9月    | 楽天ペイ         | 即落ち
2018年7月    | 楽天ペイ（再挑戦）| 出展の様子を求められ提出するも否決
      8月    | Airペイ          | 激落ち
      8月    | R社              | 可決の見込みなしで強制終了
      8月    | A-REGI           | 常設店舗が必要で対象外
      9月    | A社              | 意味のある返事なし
      9月    | United Will      | 何往復かやりとりするも否決
      9月    | J社              | 進行中
      10月   | Coiney           | 可決（クレジットカードのみ）
      12月   | Coiney           | 交通系電子マネー追加審査も可決
//}
//footnote[coiney][モバイル決済サービス「Coiney」を提供する会社。株式会社クレディセゾンと提携している。]

申し込みすぎでは？
楽天ペイは、交通系電子マネーを餌に楽天経済圏を広げるためじゃないか、もしかしたら審査が甘いかも、と思ったらそんなことはありませんでした。
この頃のターゲティング広告、「審査に通らない方へ」とかそんな内容ばかりだった気がします。
それでも、もしCoineyが通らなければ、Times Payや、ソフトバンク・ペイメント・サービス株式会社または株式会社シーピーエージェントの決済サービスにも申し込むつもりでいました。

しかし、よく見るとCoineyのところに「可決（クレジットカードのみ）」と書いてあります。
本章は「交通系電子マネー編」のはずでは？
実は、Coineyが交通系電子マネーの取り扱いを開始したのは2018年12月のことです。
最初に申し込んだ2018年10月の段階ではまだ取り扱われていませんでしたが、「2018年中交通系電子マネー対応予定」との記述がありました。
そこで、いまCoineyの加盟店になっておくことで、今後訪れるであろう交通系電子マネー取り扱いの追加審査が甘くなるのではと考えて申し込んだわけです。
本当に甘かったのかは比較のしようがないため不明ですが、結果的に審査に通ったのでOKです。
運が良かったのと、審査前に神社へ参拝したのが効いたのでしょう。マジ神です。

一応、上記とクレジットカードの話を含めてCoineyに対して持った印象を次に述べます。

==== 加盟店審査通過は簡単ではない
交通系電子マネー取り扱い審査の話は置いて、クレジットカード取り扱い審査の話です。
Coineyでは、1次審査としてVisa、Mastercard、また国際ブランドを問わずセゾンカードの取り扱い審査があります。
この段階で、販売業態の確認と販売の様子について確認が入りました。

その後、無事1次審査に通過し、次は2次審査となりました。
2次審査の結果次第で、JCB、AMEX、Diners、Discoverの取り扱い可否が決まります。
加盟店審査が厳しいJCBが入っている時点で不安でしたが、案の定否決でした。おわり。
でも、交通系電子マネーの審査には通ったのでOKです。
肉を切らせて骨を断つですよ。

少なくとも2次審査に関しては株式会社ジェーシービーが行っているものと思いますが、Squareのときは何で通ったのでしょう@<emoji>{thinking}？
最近、JCBのカードで決済したのが、FANZAとDLsite、とら、メロブだけだったためという可能性が95割くらい考えられますね。

==== PINコード入力で決済できる
まだクレジットカードの話です。
Coineyでは、決済に@<img>{terminal_plus}のキーパッドのある端末@<fn>{miura}を利用しており、クレジットカード決済の際にPINコードで取引できます。嬉しい！
ただ、2014年頃まで提供されていた@<img>{coiney_reader}の端末@<fn>{coineyreader}では、1万円以下の決済はサインレスだったそうです。悲しい！
//subfig[コイニーが提供する端末]{
//image[terminal_plus][CoineyターミナルPlus][scale=0.3]
//image[coiney_reader][Coineyリーダー][scale=0.25]
//}
//footnote[miura][国内のモバイル決済でよく見る「Miura M010 Reader」です。他社のリーダーはたいてい黒色なのに、コイニーのリーダーは白色で見分けやすい。]
//footnote[coineyreader][決済端末のEMV対応義務化に伴って廃止された。]

==== 交通系電子マネーを取り扱う際のみ制約がある
誰でも閲覧可能なサポートページ@<fn>{coiney-support}によると、いくつか気になる記述がありました。
これらは交通系電子マネーを取り扱う場合のみに限られますが、次のような具合です。

: 対応端末が限られる
  決済に利用できるスマートフォン・タブレットは、一部のiOS端末に限られます。
  当サークルで使っているiPad Air2は対象外なため、急遽第6世代のiPadを買いました。
  もう4年前の端末なので仕方ないといえばそうですが、予期していなかったですね…。
: 決済アプリのインストールに制限がある
  決済アプリのインストール回数は1アカウント10回までだそうです。
  おそらく超えないとは思いますが、気をつける必要があります。

//footnote[coiney-support][@<href>{https://support.coiney.com/hc/ja/categories/360001182011}]

== 即売会でのオペレーション
SIGCOWWには、POSレジのようなシステム@<fn>{nichi}があります。
売り子でも簡単に各種決済を扱えることを目的@<fn>{toha}にしており、構成はRaspberry Piを中心としてiPadやバーコードリーダー、カスタマディスプレイが接続されるようになっています。
//footnote[toha][ただし、目的を達成しているとは言い難い状況です。]

ちなみにiPadのスタンドは@<img>{sigcoww_stand}の「Universal Tablet Station」、@<img>{stille_stand}のブレンド・Sに出てきたスタンドと同じ形をしています。
SIGCOWWって、喫茶スティーレだったんですね。
//subfig[iPadスタンドの比較]{
//image[sigcoww_stand][SIGCOWWの場合][scale=0.327]
//image[stille_stand][喫茶スティーレの場合（ブレンド・S 8話より ©中山幸・芳文社／ブレンド・S製作委員会）][scale=0.65]
//}
//footnote[nichi][@<href>{https://github.com/SIGCOWW/nichi}]

本章では、このシステムと各種決済を連携するあれこれについて述べます。

=== Square
Squareでは決済用のSDKやAPIが提供@<fn>{open}されており、簡単に連携を行えます。
SIGCOWWでは、オフライン決済用に提供される「Point of Sale API」@<fn>{pos-api}を用いています。
Point of Sale APIとは、Custom URL Schemeを利用してSquareの決済アプリと連携するための機能です。
これにより、Webブラウザや自作のアプリから特定のURLを踏むとSquareの決済アプリが起動して処理を行うことができます。
この際のURLには決済金額を含めることができ、さらに決済完了後は元のアプリに戻ってくる挙動も実現可能です。
特にコミケなど、ある程度決済額が決まっているような場合で利用すると、手間を減らせて便利だと思います。
//footnote[open][嬉しいことに、仕様は誰でも閲覧可能です。]
//footnote[pos-api][@<href>{https://docs.connect.squareup.com/payments/pos/overview}]

=== Coiney
CoineyにもSDKがあるようです。
@<bou>{あるようです}というのは、余裕がなく今回のC95には実装が間に合わなかったためです。
このSDKは問い合わせにより仕様が開示されるとのことで詳細は不明ですが、概要を見る限り自作アプリにCoiney側のViewを組み込むことで連携を行うように思えます。

Custom URL Schemeで連携してくれると嬉しいのですが、そういった記述は見つけられませんでした。
かろうじて「@<tt>{coiney://}」のリンクを踏めば決済アプリが起動することが分かった@<fn>{reverse}ので、ランチャーアプリのようなものは作れるかもしれません。
//footnote[reverse][規約によりリバースエンジニアリングは禁止されています。そのため勘で当てましたがそのままでした。]

=== pixiv PAY
pixiv PAYには、公開されているSDKやAPIはありません。
手動でアプリを立ち上げて商品を選択し、会計ボタンを押す必要があります。
でも最近は、「商品QR」という機能が導入され、頒布側は何も端末を操作しなくて済むようになりました。
これを使えばSDKやAPIが何か、手間はどうなるといったことを意識しなくても良いかもしれません。こっちの方が楽です。おわり。

==== Custom URL Scheme編
それでは悲しいので、せめてpixiv PAYのアプリを起動するためのCustom URL Schemeを探してみます。

pixiv PAYの規約を確認したところリバースエンジニアリングの禁止に関する項目はありませんでした。
もしあったとしても、pixiv PAYの利用をやめるだけです@<fn>{zettai}。
そこで、@<tt>{.ipa}ファイルと@<tt>{.apk}ファイルを確認したところ、「@<tt>{pixivpay://}」と「@<tt>{serval://}」@<fn>{serval}というCustom URL Schemeが用意されていることが分かりました。
//footnote[zettai][SquareやCoineyのリバースエンジニアリングについては、当該サービスを使えなくなると困る上、加盟店情報交換センターに強制解約の情報が載ると非常に困るのでやりません。]
//footnote[serval][pixiv PAYのリリースはC92の頃（2017年8月）でした。あまり関係ないとは思いますが、この少し前にサーバルちゃんが流行っていました。すっごーい！偶然ですね。]

また、調べられる範囲で@<tt>{.apk}ファイルをみると、次のリンクにより特定の画面に遷移することが分かりました。

: pixivpay://nav/notifications
  pixivからのお知らせページへ飛ぶ（販売中除く）
: pixivpay://nav/points
  保有ポイントの確認ページへ飛ぶ（販売中除く）

販売側として使えそうなのは無さそうです。おわり。

==== スイッチコントロールで自動化編
にもかかわらず、SIGCOWWでは起動から決済用QRコードの表示までを自動で行おうとしてみました。
その方法は、iPadのWebブラウザや自作アプリからCustom URL Schemeによりpixiv PAYのアプリを起動し、画面のタップをソフトウェアからエミュレートしてpixiv PAYアプリを操作するというものです。

画面タップについては、もしAndroid端末を使っていたらadb (Android Debug Bridge)からエミュレートが可能です。
しかし、iOS端末で同じことを行おうとするとJailbreakが必要となり、Squareの規約に触れます。
加盟店規約と公理教会@<fn>{koori}が定めた禁忌目録を逸脱する行為はしません。
//footnote[koori][氷協会だと思ってました。]

そこで、今回は同じ@<bou>{ような}ことを実現するために、iOSの標準機能として備わる「スイッチコントロール」を利用しました。
スイッチコントロールはアクセシビリティ機能のひとつで、カメラや外部スイッチからの入力でiPadを操作できます。
外部スイッチにはBluetoothキーボードも利用でき、特にこの場合あるキーを押下したときに画面上のある位置をタップする、といった操作を複数登録できます。
そこでSIGCOWWでは、Adafruitのページ@<fn>{adafruit}を参考にBluetoothキーボードとして振る舞うデバイスをiPadのWebブラウザから操作、最終的にiPad本体を操るという回りくどいことをしていました。
//footnote[adafruit][@<href>{https://learn.adafruit.com/ios-switch-control-using-ble/overview}@<qrcode>{https://learn.adafruit.com/ios-switch-control-using-ble/overview}]

このとき利用したデバイスは2つあり、そのうちの1つが「Adafruit Bluefruit LE SPI Friend」です。
このデバイスは、ATコマンドで制御するとBLE HIDを話してくれます。
ただ、データフレームのフォーマットが独特で、これをNode.jsのプログラムから操るために自前で実装@<fn>{sdep}するなど、少し手間がかかりました。
//footnote[sdep][@<href>{https://gist.github.com/lrks/b22b4dfbd8d4d8a1e40c68e8667d63b5}]

さらに、Raspberry Pi Zero WをBluetoothキーボードとして振る舞わせてみたりもしました。
自前で実装したわけではなく、公開されていた手順@<fn>{raspi-keyboard}に従っただけです。
接続するだけなら手軽ではあったのですが、混雑する場所では頻繁に接続が切れます@<fn>{hosoku}。
再接続する際のハンドリングが大変で、つらかったです。
接続については、「SPI Friend」でも混雑時にはほどほどに切断されていたものの、再接続はハードウェア側で行われていたため簡単でした。
//footnote[raspi-keyboard][@<href>{https://qiita.com/mt08/items/5f9dfc30707f94e3b8c8}@<qrcode>{https://qiita.com/mt08/items/5f9dfc30707f94e3b8c8}]
//footnote[hosoku][ソフトウェアが原因ではなく、Raspberry Pi Zero Wにおける無線接続の性能によるところが大きいと思います。]

そもそも接続を切らないようにするという意味では、有線接続が考えられます。
たとえば、iPadとRaspberry Pi ZeroをUSBで接続、Raspberry Pi ZeroではUSB Gadget Driverを動作させUSBキーボードとして振る舞わせれば良い感じになりそうです@<fn>{swenable}。
このとき、iPadからRaspberry Piへ情報を渡す手段として、Raspberry Pi ZeroをUSB Ethernetアダプタとしても振る舞わせる必要がありそうです。
ただし、Ethernetの優先順位次第ではiPadからの通信がすべて吸われてしまうかも知れません。
吸い込まれた先がインターネットに繋がっていれば構わないのですが、そうでない場合は決済が成立しません。
ネイティブアプリを用意するということであれば、Raspberry Pi ZeroをUSBシリアルアダプタとして振る舞わせればうまくいきそうな気もしますが、手間がかかりますね。
//footnote[swenable][スイッチコントロールの外部スイッチとして利用できるかは未検証です。]

この他に有線接続する方法としては、iPad Proに搭載されている「Smart Connector」に接続されたキーボード@<fn>{swenable2}の利用が挙げられます。
Smart Connectorは3pinで電力とデータ@<fn>{1-wire}をやりとりするコネクタで、キーボードや充電台が接続可能です。
仕様はもちろん開示されておらず謎、販売されているキーボードも分解が困難らしく、スイッチング素子か何かで特定のキーを押下したように見せるのは厳しいでしょう。
本体とキーボードの値段を合わせると、10万円は超えますし@<emoji>{sushi}。
//footnote[swenable2][【再放送】スイッチコントロールの外部スイッチとして利用できるかは未検証です。]
//footnote[1-wire][おそらくデータ用のピンは1つのみと思われますが、双方向通信らしいです。]

あとはややレギューレーション違反な気がしますが、iPad本体に手を加えてタッチスクリーンコントローラをエミュレートするくらいでしょうか。
調べてみてもiOS端末のタッチスクリーンコントローラはSPI接続らしい、というくらいしか分かりませんでしたが、リプレイ攻撃のように画面上のある位置をタップした際の信号を記録しておき、あとでその信号を送ればいい感じにできそうです。
Android端末では実現できているようで、サプライチェーン攻撃に利用されるかも知れないという指摘@<fn>{omer2018}や、スクフェスの物理ボタンを制作した例@<fn>{lovelive}がありました。
//footnote[omer2018][@<href>{https://iss.oy.ne.ro/Shattered}@<qrcode>{https://iss.oy.ne.ro/Shattered}]
//footnote[lovelive][@<href>{https://www.nicovideo.jp/watch/sm26846522}@<qrcode>{https://www.nicovideo.jp/watch/sm26846522}]


=== PayPay
PayPayの「よみとる決済」加盟店の場合、SDKやAPIは提供されていません。
QRコードを置くだけだから当然といえば当然です。

ただ、この「QRコードを置くだけ」ということに懸念があります。
それは、故意か否かはともかく、実際には支払われていないにもかかわらず「支払った」と主張されることです。
システムトラブルの場合はどうしようもありませんが、もし故意による場合は「イベントや時間帯ごとに加盟店ロゴを変える」という方法で、詐欺の被害を減らせる可能性があります。

利用者側アプリの決済完了画面や決済履歴に表示される加盟店ロゴは、当該決済が行われた時点のロゴのようです。
@<img>{paypay_logo}は、テスト決済と返金を行った後、加盟店ロゴを変更した上で再びテスト決済と返金を行った際の利用者側アプリ画面です。
この仕様を利用して、イベントや時間帯ごとに加盟店ロゴを変更、もし決済完了画面に想定外のロゴが表示されていたら加盟店用のWebページから決済履歴を確認するという対策が取れそうです。
//image[paypay_logo][PayPayアプリの決済履歴画面（決済番号は加工）][scale=0.6]

通知に関して、本当はWebhookで通知@<fn>{paypay-mail}、またはアプリか何かで通知してくれると決済完了の確認が簡単になりそうですが、そもそもそうした加盟店向けのアプリは提供されていません。
残念でした。
せめて、利用者用のアプリと何か連携できるか調べてみよう…としましたが、利用規約にリバースエンジニアリングの禁止が書かれていたためやめておきます。
たとえ利用者向けであっても規約違反はしません。
ただ、Custom URL Schemeだけは勘で調べると、「@<tt>{paypay://}」で起動することを確認しました。
//footnote[paypay-mail][現在はE-MailまたはSMSで通知が来ます。]

ちなみに、加盟店QRコードの内容は「@<tt>{https://qr.paypay.ne.jp/加盟店IDらしきもの}」といった感じでした。
「@<tt>{paypay://payments/加盟店ID}」で支払えると、PayPayのアプリを開かずにiOS標準のカメラだったり他のQRコードリーダーからも遷移できて利便性が向上する気もします@<fn>{alipay}。
とはいえ、利便性でいえば、カメラでQRコードを読み取るよりもFelica/NFCタグで読み取れたほうが嬉しいですね…。
//footnote[alipay][一部の加盟店ではAlipayアプリからも同じQRコードを読めるようになっているので、難しいのかも知れません。]


== 今後の展望
はい今後の展望です。

今後は、PayPayで「みせる決済」を受けられるようにしたり、QUICPayやiD、クレジットカードの非接触決済を入れたいですね。
ただ、実現可能性は低いです。
それと、オペレーションのためのシステムをもっとちゃんと作りたいですね。
こちらは実現できそうです。

そして、今後の展望とはあまり関係ありませんが、@<img>{acrylic_stand}のアクリルPOPを作ったので見てください。
初めてUVプリンターを使ったら、データの作り方が甘くて白インクが出ませんでした。
次作るときはまともにしたいですね。おわり。
//image[acrylic_stand][喜びのあまり作ったアクリルPOP][scale=1]
